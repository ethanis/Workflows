name: freestyle-seal
on:
  pull_request:
    branches:
    - main
    - unicorn
  push:
    branches:
    - main
    - "${sha1}"
  workflow_dispatch:
    inputs:
      WORST_GAME_OF_THRONES_CHARECTER:
        required: false
        description: This is a description
        default: jorah.mormont
      sha1:
        required: false
        description: '"The git ref (branch, tag, commit) to build"'
        default: develop
env:
  test: "${FAVOURITE_FRUIT }"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: powershell
      shell: powershell
      run: |-
        #!/usr/bin/env ruby
        # frozen_string_literal: true
    
        #
        # This file was generated by Bundler.
        # The application 'rspec' is installed as part of a gem, and
        # this file is here to facilitate running it.
        require "pathname"
        ENV["BUNDLE_GEMFILE"] ||= File.expand_path(
          "../../Gemfile",
          Pathname.new(__FILE__).realpath
        )
        bundle_binstub = File.expand_path("bundle", __dir__)
        if File.file?(bundle_binstub)
          if /This file was generated by Bundler/.match?(File.read(bundle_binstub, 300))
            load(bundle_binstub)
          else
            abort("Your `bin/bundle` was not generated by Bundler, so this binstub cannot run.
        Replace `bin/bundle` by running `bundle binstubs bundler --force`, then run this command again.")
          end
        end
        require "rubygems"
        require "bundler/setup"
        load Gem.bin_path("rspec-core", "rspec")
    - name: install-sonarscanner
        New-Item -Path ./.sonar/scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    - name: start-sonar-msbuild-analysis
      shell: pwsh
      env:
        SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: |-
        ./.sonar/scanner/dotnet-sonarscanner begin /k:'event calendar-conference-service'
        /n:sonar.projectName='Event Calendar Conference Service   STAGING'
        /v:sonar.projectVersion='2.15'
        /d:sonar.login=${{ secrets.SONAR_TOKEN }}
        /d:sonar.verbose="true"
        /d:sonar.cs.opencover.reportsPaths='"/path/to/coverage.xml","/path/to/coverage.2.xml"'
        /d:sonar.coverage.exclusions='"**/*.cs","**/*.md"'
    - name: end-sonar-msbuild-analysis
      shell: pwsh
      env:
        SONAR_TOKEN: "${{ ADD_BEGIN_SONAR_TOKEN_HERE }}"
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: "./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login=${{ ADD_BEGIN_SONAR_TOKEN_HERE }}"
#     - uses: rocks.inspectit.releaseplugin.versioning.JIRAVersionEditor
#       with:
#         class: rocks.inspectit.releaseplugin.versioning.JIRAVersionEditor
#         plugin: release-helper@1.3.3
#         jiraCredentialsID: 
#         versionModifiactions: 
#       if: env.sha1 == 'develop'
